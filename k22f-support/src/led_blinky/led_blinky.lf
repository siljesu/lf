target C {
    threading: false,
    build: "armgcc/build_nxp_unix.sh",
};

main reactor {
    preamble {=
	#include "../../../SDK_2_12_0_FRDM-K22F/devices/MK22F51212/fsl_device_registers.h"
	#include "../../../SDK_2_12_0_FRDM-K22F/devices/MK22F51212/utilities/debug_console_lite/fsl_debug_console.h"
	#include "../../../SDK_2_12_0_FRDM-K22F/devices/MK22F51212/drivers/fsl_common.h"
    #include "../../../SDK_2_12_0_FRDM-K22F/devices/MK22F51212/drivers/fsl_gpio.h"
    #include "../../../SDK_2_12_0_FRDM-K22F/devices/MK22F51212/drivers/fsl_port.h"
    #include "clock_config.h"
	#include "board.h"
    #include "pin_mux.h"
    =}

    timer t(1 sec,1 msec)

    reaction(startup) {=
        PRINTF("Starting...\r\n");

        gpio_pin_config_t LEDRGB_RED_config = {
            .pinDirection = kGPIO_DigitalOutput,
            .outputLogic = 0U
        };
        /* Initialize GPIO functionality on pin PTA1 (pin 23)  */
        GPIO_PinInit(BOARD_LEDRGB_RED_GPIO, BOARD_LEDRGB_RED_PIN, &LEDRGB_RED_config);

        /* PORTA1 (pin 23) is configured as PTA1 */
        PORT_SetPinMux(BOARD_LEDRGB_RED_PORT, BOARD_LEDRGB_RED_PIN, kPORT_MuxAsGpio);

    =}

    reaction(t) {=
        GPIO_PortToggle(BOARD_LEDRGB_RED_GPIO, 1u << BOARD_LEDRGB_RED_PIN);
    =}
}
